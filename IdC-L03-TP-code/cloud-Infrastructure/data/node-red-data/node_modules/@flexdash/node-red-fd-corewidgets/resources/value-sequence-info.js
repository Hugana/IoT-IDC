export default {
  "vue_file": "widgets/value-sequence.vue",
  "base_filename": "value-sequence",
  "module_dir": ".",
  "module_name": "@flexdash/node-red-fd-corewidgets",
  "resources_dir": "resources",
  "resources_path": "resources/@flexdash/node-red-fd-corewidgets",
  "name": "ValueSequence",
  "name_text": "Value Sequence",
  "type_kebab": "fd-value-sequence",
  "help": "Input a value by clicking +/- through a sequence.\nThe range input provides an array of values from which the user can select one by\nclicking on the +/- buttons. The values are typically numeric but may be strings as well, or\na combination of both.\n\nTo facilitate the input of numeric ranges a `range` value of `...` between two numbers\nis replaced by the range between those numbers.\nA step may be specified after the dots, e.g. `...10`. For example,\nthe input array `[\"off\", 20, \"...10\", 50]` results in the range: \"off\", 20, 30, 40, 50.\n\nA `value` coming in sets the current value being displayed but does not cause any output.\nIf the `value` is not part of the range, it is displayed, but the next button press on the\n+ or - buttons will produce the first value of the range as output.\n",
  "help_title": "Input a value by clicking +/- through a sequence",
  "help_body": "The range input provides an array of values from which the user can select one by\nclicking on the +/- buttons. The values are typically numeric but may be strings as well, or\na combination of both.\n\nTo facilitate the input of numeric ranges a `range` value of `...` between two numbers\nis replaced by the range between those numbers.\nA step may be specified after the dots, e.g. `...10`. For example,\nthe input array `[\"off\", 20, \"...10\", 50]` results in the range: \"off\", 20, 30, 40, 50.\n\nA `value` coming in sets the current value being displayed but does not cause any output.\nIf the `value` is not part of the range, it is displayed, but the next button press on the\n+ or - buttons will produce the first value of the range as output.",
  "output": true,
  "props": {
    "title": {
      "name": "title",
      "name_text": "Title",
      "name_kebab": "title",
      "msg_name": "title",
      "type": "string",
      "input_type": "str",
      "tip": "Text to display in the widget header. ",
      "default": "Value Sequence",
      "default_html": "'Value Sequence'"
    },
    "popup_info": {
      "name": "popup_info",
      "name_text": "Popup Info",
      "name_kebab": "popup-info",
      "msg_name": "popup_info",
      "type": "string",
      "input_type": "str",
      "tip": "Info text to display in (i) pop-up. ",
      "default": null,
      "default_html": null
    },
    "range": {
      "msg_name": "range",
      "name": "range",
      "name_text": "Range",
      "name_kebab": "range",
      "tip": "Values to select from, use '...<step>' for a range. ",
      "default": [
        "off",
        10,
        "...10",
        100
      ],
      "default_html": "['off',10,'...10',100]",
      "type": "array",
      "input_type": "json"
    },
    "value": {
      "msg_name": "payload",
      "name": "value",
      "name_text": "Payload",
      "name_kebab": "value",
      "tip": "Set current value. ",
      "default": null,
      "default_html": null,
      "input_type": "any"
    },
    "unit": {
      "msg_name": "unit",
      "name": "unit",
      "name_text": "Unit",
      "name_kebab": "unit",
      "tip": "Unit to show after numeric values. ",
      "default": "",
      "default_html": "",
      "type": "string",
      "input_type": "str"
    },
    "label": {
      "msg_name": "label",
      "name": "label",
      "name_text": "Label",
      "name_kebab": "label",
      "tip": "Label for control. ",
      "default": "",
      "default_html": "",
      "type": "string",
      "input_type": "str"
    },
    "label_above": {
      "msg_name": "label_above",
      "name": "label_above",
      "name_text": "Label Above",
      "name_kebab": "label-above",
      "tip": "Place label above control, else to the left. ",
      "default": false,
      "default_html": "false",
      "type": "boolean",
      "input_type": "bool"
    }
  },
  "payload_prop": "value"
}