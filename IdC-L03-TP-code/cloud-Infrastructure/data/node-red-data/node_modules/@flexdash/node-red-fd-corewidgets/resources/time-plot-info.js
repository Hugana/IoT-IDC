export default {
  "vue_file": "widgets/time-plot.vue",
  "base_filename": "time-plot",
  "module_dir": ".",
  "module_name": "@flexdash/node-red-fd-corewidgets",
  "resources_dir": "resources",
  "resources_path": "resources/@flexdash/node-red-fd-corewidgets",
  "name": "TimePlot",
  "name_text": "Time Plot",
  "type_kebab": "fd-time-plot",
  "help": "Time-series chart with simple options.\nTimePlot displays a time-series chart using [uPlot](https://github.com/leeoniya/uPlot).\nIt is a wrapper around TimePlot which deals with resizing, and transposes the data coming in.\nTimePlot simplifies the configuration of typical\ntime-series plots compared to TimePlotRaw.\n\nThe data (`payload`) must be input in the form of \"data points\" where a data point is an array\nconsisting of a unix timestamp (seconds since 1970-01-01) followed by a value per series.\nNull values are OK to designate missing data.\n**Important**: each and every data point must have _exactly_ one value per series, otherwise\nnothing will be plotted.\n\nEach `payload` may be either an array of data points or a single data point. If an array is\nprovided then it replaces the entire dataset being shown. If a single point is provided\nit is appended to the current dataset and an old data point may be rotated out.\n\nThe `max_points` prop can be used to limit the number of data points to keep when\nsending data points incrementally.\nIf it is an integer it is interpreted as the number of points to keep.\nIf it is a string of the form `[0-9]*[smhd]` it is interpreted as a period of time\nin seconds, minutes, hours, or days. E.g. \"2h\" means keep the last 2 hours of data.\nThere is an additional hard-coded limit of 10k data points.\n\nThe `labels`, `colors`, `axes`, and `series` props control the options passed to uPLot.\nBy default, with all these inputs empty ([]) a single series is plotted without label.\nIf any of the array inputs are specified the longest array determines the number of series.\n\nThe default color sequence is blue, green, yellow, red, cyan, purple, orange, teal, pink, lime,\nmagenta, lavender, brown, beige, maroon, mint, olive, apricot, navy, and grey from\nhttps://sashamaps.net/docs/resources/20-colors/.\nThese color names can be used in the `colors` prop.\n\nTimePlot outputs the uPlot options it constructs to the browser console.\nThis can be handy as a starting point if you need to switch to TimePlotRaw to get\nthe full uPlot flexibility.\n",
  "help_title": "Time-series chart with simple options",
  "help_body": "TimePlot is a wrapper around the TimePlotRaw widget to make the configuration of typical\ntime-series plots easier than using the raw uPlot options, which TimePlotRaw expects.\n\nBy default, with all array inputs (labels, colors, axes, ...) empty ([]) a single series\nis plotted without label. If any of the\narray inputs are specified the longest array determines the number of series.\n\nThe default color sequence is blue, green, yellow, red, cyan, purple, orange, teal, pink, lime,\nmagenta, lavender, brown, beige, maroon, mint, olive, apricot, navy, and grey from\nhttps://sashamaps.net/docs/resources/20-colors/.\nThese color names can be used in the `colors` prop.\n\nThe data must be input in the form of \"data points\" where a data point is an array consisting of\na unix timestamp (seconds since 1970-01-01) followed by a value per series. Null values are OK\nto designate missing data.\n**Important**: each and every data point must have _exactly_ one value per series, otherwise\nnothing will be plotted.\nNote that this \"row-wise\" structure gets transposed to the columnar structure expected by uPlot.\n\nTimePlot outputs the uPlot options it constructs to the browser console.\nThis can be handy as a starting point if you need to switch to TimePlotRaw to get\nthe full uPlot flexibility.",
  "output": false,
  "props": {
    "title": {
      "name": "title",
      "name_text": "Title",
      "name_kebab": "title",
      "msg_name": "title",
      "type": "string",
      "input_type": "str",
      "tip": "Text to display in the widget header. ",
      "default": "Time Plot",
      "default_html": "'Time Plot'"
    },
    "popup_info": {
      "name": "popup_info",
      "name_text": "Popup Info",
      "name_kebab": "popup-info",
      "msg_name": "popup_info",
      "type": "string",
      "input_type": "str",
      "tip": "Info text to display in (i) pop-up. ",
      "default": null,
      "default_html": null
    },
    "data": {
      "msg_name": "payload",
      "name": "data",
      "name_text": "Payload",
      "name_kebab": "data",
      "tip": "Array of row-wise data or a single row. ",
      "default": null,
      "default_html": null,
      "type": "array",
      "input_type": "json"
    },
    "labels": {
      "msg_name": "labels",
      "name": "labels",
      "name_text": "Labels",
      "name_kebab": "labels",
      "tip": "Array of labels for series. ",
      "default": [],
      "default_html": "[]",
      "type": "array",
      "input_type": "json"
    },
    "colors": {
      "msg_name": "colors",
      "name": "colors",
      "name_text": "Colors",
      "name_kebab": "colors",
      "tip": "Array of colors for series, names or #rrggbb. ",
      "default": [],
      "default_html": "[]",
      "type": "array",
      "input_type": "json"
    },
    "axes": {
      "msg_name": "axes",
      "name": "axes",
      "name_text": "Axes",
      "name_kebab": "axes",
      "tip": "Array to assign series to 'left' or 'right' axis. ",
      "default": [],
      "default_html": "[]",
      "type": "array",
      "input_type": "json"
    },
    "widths": {
      "msg_name": "widths",
      "name": "widths",
      "name_text": "Widths",
      "name_kebab": "widths",
      "tip": "Array of stroke widths for series, default is 2. ",
      "default": [],
      "default_html": "[]",
      "type": "array",
      "input_type": "json"
    },
    "points": {
      "msg_name": "points",
      "name": "points",
      "name_text": "Points",
      "name_kebab": "points",
      "tip": "Array of bool to show points on lines. ",
      "default": [],
      "default_html": "[]",
      "type": "array",
      "input_type": "json"
    },
    "span_gaps": {
      "msg_name": "span_gaps",
      "name": "span_gaps",
      "name_text": "Span Gaps",
      "name_kebab": "span-gaps",
      "tip": "Array of bool to span over nulls, default is false. ",
      "default": [],
      "default_html": "[]",
      "type": "array",
      "input_type": "json"
    },
    "left_unit": {
      "msg_name": "left_unit",
      "name": "left_unit",
      "name_text": "Left Unit",
      "name_kebab": "left-unit",
      "tip": "Unit to label left axis. ",
      "default": "",
      "default_html": "",
      "type": "string",
      "input_type": "str"
    },
    "left_min": {
      "msg_name": "left_min",
      "name": "left_min",
      "name_text": "Left Min",
      "name_kebab": "left-min",
      "tip": "Minimum for left axis. ",
      "default": null,
      "default_html": null,
      "type": "number",
      "input_type": "num"
    },
    "left_max": {
      "msg_name": "left_max",
      "name": "left_max",
      "name_text": "Left Max",
      "name_kebab": "left-max",
      "tip": "Maximum for left axis. ",
      "default": null,
      "default_html": null,
      "type": "number",
      "input_type": "num"
    },
    "left_decimals": {
      "msg_name": "left_decimals",
      "name": "left_decimals",
      "name_text": "Left Decimals",
      "name_kebab": "left-decimals",
      "tip": "Decimals on left axis. ",
      "default": 1,
      "default_html": "1",
      "type": "number",
      "input_type": "num"
    },
    "left_isoprefix": {
      "msg_name": "left_isoprefix",
      "name": "left_isoprefix",
      "name_text": "Left Isoprefix",
      "name_kebab": "left-isoprefix",
      "tip": "Use SI prefix on left axis. ",
      "default": false,
      "default_html": "false",
      "type": "boolean",
      "input_type": "bool"
    },
    "left_log": {
      "msg_name": "left_log",
      "name": "left_log",
      "name_text": "Left Log",
      "name_kebab": "left-log",
      "tip": "Use log scale on left axis. ",
      "default": false,
      "default_html": "false",
      "type": "boolean",
      "input_type": "bool"
    },
    "right_unit": {
      "msg_name": "right_unit",
      "name": "right_unit",
      "name_text": "Right Unit",
      "name_kebab": "right-unit",
      "tip": "Unit to label right axis. ",
      "default": "",
      "default_html": "",
      "type": "string",
      "input_type": "str"
    },
    "right_min": {
      "msg_name": "right_min",
      "name": "right_min",
      "name_text": "Right Min",
      "name_kebab": "right-min",
      "tip": "Minimum for right axis. ",
      "default": null,
      "default_html": null,
      "type": "number",
      "input_type": "num"
    },
    "right_max": {
      "msg_name": "right_max",
      "name": "right_max",
      "name_text": "Right Max",
      "name_kebab": "right-max",
      "tip": "Maximum for right axis. ",
      "default": null,
      "default_html": null,
      "type": "number",
      "input_type": "num"
    },
    "right_decimals": {
      "msg_name": "right_decimals",
      "name": "right_decimals",
      "name_text": "Right Decimals",
      "name_kebab": "right-decimals",
      "tip": "Decimals on right axis. ",
      "default": 1,
      "default_html": "1",
      "type": "number",
      "input_type": "num"
    },
    "right_isoprefix": {
      "msg_name": "right_isoprefix",
      "name": "right_isoprefix",
      "name_text": "Right Isoprefix",
      "name_kebab": "right-isoprefix",
      "tip": "Use SI prefix on right axis. ",
      "default": false,
      "default_html": "false",
      "type": "boolean",
      "input_type": "bool"
    },
    "right_log": {
      "msg_name": "right_log",
      "name": "right_log",
      "name_text": "Right Log",
      "name_kebab": "right-log",
      "tip": "Use log scale on right axis. ",
      "default": false,
      "default_html": "false",
      "type": "boolean",
      "input_type": "bool"
    },
    "reverse_legend": {
      "msg_name": "reverse_legend",
      "name": "reverse_legend",
      "name_text": "Reverse Legend",
      "name_kebab": "reverse-legend",
      "tip": "Reverse legend order. ",
      "default": false,
      "default_html": "false",
      "type": "boolean",
      "input_type": "bool"
    },
    "max_points": {
      "msg_name": "max_points",
      "name": "max_points",
      "name_text": "Max Points",
      "name_kebab": "max-points",
      "tip": "Max data points (int) or period ([0-9]*[smhd] for secs/mins/hrs/days). ",
      "default": null,
      "default_html": null,
      "input_type": "any"
    }
  },
  "payload_prop": "data"
}